                                  p=0             p=1  
set i 31         # 0: i = 32
set a 1          # 1: a = 1
mul p 17         # 2:             p=0             p=17
jgz p p          # 3:             noop            jump->20 (3+17)

####
# Entry point p = 0
#### 

##
##  a = 2^i - 1 = 2^31-1
##
mul a 2          # 4: a *= 2         
add i -1         # 5: i -= 1
jgz i -2         # 6:
                    # if i > 0:
                    #   jump-> 4
                    # else:
add a -1         # 7: a -= 1

##  SEND 127 values
##
##  p = 826
##  for i in range(127):
##    p = (((p*8505) % a)*129749)+12345) % a
##    b = p % 10000
##    send(b)
##
set i 127        # 8: i = 127
set p 826        # 9: p = 826
mul p 8505       #10: p *= 8505
mod p a          #11: p = p % a
mul p 129749     #12: p *= 129749
add p 12345      #13: p += 12345
mod p a          #14: p = p % a
set b p          #15: b = p
mod b 10000      #16: b = b % 10000
snd b            #17: send(b)
add i -1         #18: i -= 1        
jgz i -9         #19: 
                    # if i > 0:
                    #  jump->10
                    # else:

####################
## Extry point p=1
#####################
jgz a 3          #20:
                    # if a > 0:
                    #   jump->23
                    # else:

# Keep polling until b <= 0
rcv b            #21: b = rcv()
jgz b -1         #22: 
                    # if b > 0:
                    #   jump-> 21
                    # else:



##  23-39: compares 127 consecutive receives if they are in order
#  
#  For example for N=3: [0,3,5]
#   step 0: a = 0
#   step 1: a=0, b = 3, f=1 send(3)
#   step 2: a=0, b = 5, f=1 send(5)
#   step 3:                 send(0)
#
#  For example: [3, 4, 1, 0, 2]
#   step 0: a = 3
#   step 1: a = 3, b = 4  f=1 send(4)
#   step 2: a = 3, b = 1      send(3) a=1
#   step 3: a = 1, b = 0      send(1) a=0
#   step 4: a = 0, b = 2  f=1 send(2)
#   step 5:                   send(0)

#  [3,2,1,0]
#   step 0: a = 3
#   step 1: a = 3, b=2       send(3) a=2
#   step 2: a = 2, b=1       send(2) a=1
#   step 3: a = 1, b=0       send(1) a=0
#   step 4:                  send(0)
#  At the end f==0


## while True:
##   f = 0
##   a = rcv()
##   for i in range(126):
##     b = rcv()
##     if b > a:
##       send(b)
##       f = 1
##     else:
##       send(a)
##       a = b
##    send(a) 
##    if f <= 0:
##      break -> jump 40
##
set f 0          #23: f = 0
set i 126        #24: i = 126
rcv a            #25: a = rcv()
rcv b            #26: b = rcv()
set p a          #27: p = a
mul p -1         #28: p *= -1
add p b          #29: p += b
jgz p 4          #30:
                   # if p > 0:
                   #   jump->34
                   # else:
snd a            #31: send(a)
set a b          #32: a = b
jgz 1 3          #33: jump->36
snd b            #34: send(b)
set f 1          #35: f = 1
add i -1         #36: i -= 1
jgz i -11        #37: 
                  # if i > 0:
                  #  jump->26
                  # else:
snd a            #38: send(a)
jgz f -16        #39:
                  # if f > 0:
                  #  jump->23
                  # else:

                
jgz a -19        #40:
                  # if a > 0:
                  #   jump->21
                  # else:
                  #  EXIT
