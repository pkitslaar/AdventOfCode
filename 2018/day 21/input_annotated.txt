#ip 1

###
# Self Test
###
seti 123 0 3       # ip= 0: r[3] = 123
bani 3 456 3       # ip= 1: r[3] = r[3] & 456
eqri 3 72 3        # ip= 2: r[3] = r[3] == 72
addr 3 1 1         # ip= 3: r[1] = r[3] + r[1] => jump r[3]
                   # if r[3] == 72:
                   #   jump => ip=5
                   # else:
seti 0 0 1         # ip= 4: jump=> ip=0

###
## start
###
seti 0 9 3         # ip= 5: r[3] = 0

###
## Main loop
##  - whenever r[3] != r[0] at ip=26
###
bori 3 65536 5     # ip= 6: r[5] = r[3] | 65536
seti 15028787 4 3  # ip= 7: r[3] = 15028787

    ###
    # update r[3]
    ###
    bani 5 255 2       # ip= 8: r[2] = r[5] & 255
    addr 3 2 3         # ip= 9: r[3] = r[3] + r[2]
    bani 3 16777215 3  # ip=10: r[3] = r[3] & 16777215
    muli 3 65899 3     # ip=11: r[3] = r[3] * 65899
    bani 3 16777215 3  # ip=12: r[3] = r[3] & 16777215

    ###
    # check r[5] < 256
    ###
    gtir 256 5 2       # ip=13: r[2] = 256 > r[5]
    addr 2 1 1         # ip=14: r[1] = r[2] + r[1] => jump r[2]
                    # if 256 > r[5]:
                    #   jump => ip=16 => jump ip=28
                    # else:
    addi 1 1 1         # ip=15: r[1] = r[1] +1 => jump ip=17 
    seti 27 3 1        # ip=16: r[1] = 27 => jump ip=28

    ###
    # - if r[5] >= 256
    ###
        seti 0 9 2         # ip=17: r[2] = 0

        ##
        # update r[4]
        ##
        addi 2 1 4         # ip=18: r[4] = r[2] + 1
        muli 4 256 4       # ip=19: r[4] = r[4]*256

        ##
        # check if r[4] > r[5]
        ##
        gtrr 4 5 4         # ip=20: r[4] = r[4] > r[5]
        addr 4 1 1         # ip=21: r[1] = r[1] + r[4] => jump r[4]
                           # if r[4] > r[5]:
                           #   jump => ip= 23 => jump ip=26
                           # else:
        addi 1 1 1         # ip=22: jump => ip=>24
        seti 25 1 1        # ip=23: jump => ip=26

        ##
        # if r[4] <= r[5]
        ## 
            addi 2 1 2         # ip=24: r[2] = r[2] + 1
            seti 17 8 1        # ip=25: jump => ip=18

        ###
        # if r[4] > r[5]
        ###
            setr 2 4 5         # ip=26: r[5] = r[2]
            seti 7 3 1         # ip=27: jump => ip = 8

    ###
    # - if r[5] < 256
    ###
    eqrr 3 0 2         # ip=28: r[2] = r[3] == r[0]
    addr 2 1 1         # ip=29: r[1] = r[1] + r[2] => jump r[2]
                    # if r[3] == r[0]:
                    #   jump => ip=31 => HALT
                    # else:
    seti 5 3 1         # ip=30: jump => ip=6
